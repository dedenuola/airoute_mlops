services:
  postgres:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  webserver:
    image: apache/airflow:2.8.1
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
    ports:
      - "8080:8080"
    command: webserver

  scheduler:
    image: apache/airflow:2.8.1
    depends_on:
      - webserver
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
    command: scheduler

  airflow-init:
    image: apache/airflow:2.8.1
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
    entrypoint: >
      /bin/bash -c "
      airflow db migrate &&
      airflow users create --username ${AIRFLOW_ADMIN_USER} --password ${AIRFLOW_ADMIN_PASSWORD} --firstname ${AIRFLOW_ADMIN_FIRSTNAME} --lastname ${AIRFLOW_ADMIN_LASTNAME} --role Admin --email ${AIRFLOW_ADMIN_EMAIL}
      "

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.11.1
    entrypoint: ["mlflow"]
    command:
      - "server"
      - "--backend-store-uri"
      - "sqlite:////app/mlflow.db"
      - "--default-artifact-root"
      - "/mlruns"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "5000"
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow_data:/app         # stores mlflow.db here
      - ./mlruns:/mlruns           # stores artifacts



  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    volumes:
      - ./feature_repo:/app/feature_repo
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - FEAST_REPO_PATH=/app/feature_repo
    ports:
      - "8000:8000"
    depends_on:
      - webserver
      - mlflow

volumes:
  postgres-db-volume:
